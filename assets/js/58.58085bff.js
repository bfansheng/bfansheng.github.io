(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{580:function(t,_,v){"use strict";v.r(_);var a=v(6),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#_1-推送、更新"}},[t._v("1 推送、更新")])]),v("li",[v("a",{attrs:{href:"#_2-撤销"}},[t._v("2 撤销")])]),v("li",[v("a",{attrs:{href:"#_3-分支"}},[t._v("3 分支")])]),v("li",[v("a",{attrs:{href:"#_4-储藏"}},[t._v("4 储藏")])]),v("li",[v("a",{attrs:{href:"#_5-多人合作"}},[t._v("5 多人合作")])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"_1-推送、更新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-推送、更新"}},[t._v("#")]),t._v(" 1 推送、更新")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("git add")]),t._v("-> "),v("code",[t._v("git commit")]),t._v("-> "),v("code",[t._v("git push")])]),t._v(" "),v("li",[v("code",[t._v("git push")]),t._v(": 推送文件到远程仓库。")])]),t._v(" "),v("blockquote",[v("p",[t._v("git push [RemoteHostname][LocalBranchname] [RemoteBranchname]\n如果省略远程分支名，则表示将本地分支推送与之存在“追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建：git push origin master\n上面命令表示，将本地的“master”分支推送到“origin”主机的“master”分支。如果后者不存在，则会被新建。")])]),t._v(" "),v("ul",[v("li",[t._v("主分支不能push，可以通过"),v("code",[t._v("git checkout [branchname]")]),t._v("切换分支,branchname为分支名称")]),t._v(" "),v("li",[v("code",[t._v("git pull")]),t._v(" 更新本地代码")]),t._v(" "),v("li",[t._v("建立本地分支和远程分支的关联，使用"),v("code",[t._v("git branch --set-upstream branch-name origin/branch-name")]),t._v("；")])]),t._v(" "),v("h2",{attrs:{id:"_2-撤销"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-撤销"}},[t._v("#")]),t._v(" 2 撤销")]),t._v(" "),v("ul",[v("li",[t._v("撤销工作区的修改："),v("code",[t._v("git checkout -- [文件名]")])]),t._v(" "),v("li",[t._v("从暂存区恢复文件："),v("code",[t._v("git reset HEAD [文件名]")])]),t._v(" "),v("li",[t._v("回退："),v("code",[t._v("git reset --hard HEAD^(上一个版本)、git reset --hard commit_id(版本id)")])])]),t._v(" "),v("h2",{attrs:{id:"_3-分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-分支"}},[t._v("#")]),t._v(" 3 分支")]),t._v(" "),v("ul",[v("li",[t._v("查看分支："),v("code",[t._v("git branch")])]),t._v(" "),v("li",[t._v("创建分支："),v("code",[t._v("git branch <name>")])]),t._v(" "),v("li",[t._v("切换分支："),v("code",[t._v("git checkout <name>")])]),t._v(" "),v("li",[t._v("创建+切换分支："),v("code",[t._v("git checkout -b <name>")])]),t._v(" "),v("li",[t._v("合并某分支到当前分支："),v("code",[t._v("git merge <name>")])]),t._v(" "),v("li",[t._v("删除分支："),v("code",[t._v("git branch -d <name>")])]),t._v(" "),v("li",[t._v("强行删除分支："),v("code",[t._v("git branch -D <name>")])])]),t._v(" "),v("h2",{attrs:{id:"_4-储藏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-储藏"}},[t._v("#")]),t._v(" 4 储藏")]),t._v(" "),v("ul",[v("li",[t._v("储藏："),v("code",[t._v("git stash")])]),t._v(" "),v("li",[t._v("恢复："),v("code",[t._v("git stash apply")]),t._v(",例："),v("code",[t._v("git stash apply stash@{2}")])]),t._v(" "),v("li",[t._v("恢复并移除："),v("code",[t._v("git stash pop")])]),t._v(" "),v("li",[t._v("移除："),v("code",[t._v("git stash drop")]),t._v(", 例："),v("code",[t._v("git stash drop stast@{0}")])]),t._v(" "),v("li",[t._v("查看现有的储藏："),v("code",[t._v("git stash list")])])]),t._v(" "),v("h2",{attrs:{id:"_5-多人合作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-多人合作"}},[t._v("#")]),t._v(" 5 多人合作")]),t._v(" "),v("ul",[v("li",[t._v("在本地创建和远程分支对应的分支，使用"),v("code",[t._v("git checkout -b branch-name origin/branch-name")]),t._v("，本地和远程分支的名称最好一致；")]),t._v(" "),v("li",[t._v("从本地推送分支，使用"),v("code",[t._v("git push origin branch-name")]),t._v("，如果推送失败，先用"),v("code",[t._v("git pull")]),t._v("抓取远程的新提交；")]),t._v(" "),v("li",[t._v("如果合并有冲突，则解决冲突，并在本地提交；")]),t._v(" "),v("li",[t._v("没有冲突或者解决掉冲突后，再用"),v("code",[t._v("git push origin branch-name")]),t._v("推送就能成功！")])])])}),[],!1,null,null,null);_.default=e.exports}}]);